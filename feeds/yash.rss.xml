<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>poliastro - Yash</title><link>https://www.poliastro.space/</link><description>poliastro website</description><lastBuildDate>Sun, 22 Aug 2021 12:00:00 +0200</lastBuildDate><item><title>Summarizing GSoC 2021</title><link>https://www.poliastro.space/blog/2021/08/22/conclusion-gsoc21/</link><description>&lt;p&gt;This page describes the work done during Google Summer of Code 2021 with &lt;a href="https://github.com/poliastro/poliastro"&gt;poliastro&lt;/a&gt;. I added some space event detectors under the &lt;code&gt;twobody&lt;/code&gt; problem by implementing raw orbital mechanics algorithms (inside &lt;code&gt;poliastro.core&lt;/code&gt;) accelerated by the &lt;code&gt;numba.jit()&lt;/code&gt; decorator (in the &lt;code&gt;nopython&lt;/code&gt; compilation mode, as was customary in &lt;code&gt;poliastro&lt;/code&gt;). It uses the &lt;code&gt;events&lt;/code&gt; parameter from &lt;code&gt;scipy.integrate.solve_ivp&lt;/code&gt; for tracking events and numerical integration. The required condition is checked at each time instance for an event occurence.&lt;/p&gt;
&lt;p&gt;The validation cases for the events were developed against the &lt;a href="https://www.orekit.org/"&gt;&lt;code&gt;orekit&lt;/code&gt;&lt;/a&gt; software, using the &lt;a href="https://gitlab.orekit.org/orekit-labs/python-wrapper"&gt;Orekit Python Wrapper&lt;/a&gt;, and some additional tests were added for investigating edge-cases. The user guide for the added events and some plotting results using &lt;code&gt;poliastro&lt;/code&gt;’s plotting capabilities, can be found &lt;a href="https://docs.poliastro.space/en/latest/examples/Detecting%20Events.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Added events (so far…)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Altitude Crossing &lt;a href="https://github.com/poliastro/poliastro/pull/1254"&gt;#1254&lt;/a&gt;.&lt;ul&gt;
&lt;li&gt;The already existing &lt;code&gt;LithobrakeEvent&lt;/code&gt; was made to inherit this event …&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yash</dc:creator><pubDate>Sun, 22 Aug 2021 12:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.poliastro.space,2021-08-22:/blog/2021/08/22/conclusion-gsoc21/</guid><category>GSOC</category><category>GSOC</category><category>GSOC21</category><category>poliastro</category></item><item><title>Adding the Altitude, Latitude, and Eclipse event detectors</title><link>https://www.poliastro.space/blog/2021/07/19/adding-ale-event-detectors/</link><description>&lt;p&gt;It was an engaging first half of GSoC, and it was during this duration, I understood some critical details of executing the event detectors. We started to look into the eclipse detector since we thought it might be challenging to get it right.&lt;/p&gt;
&lt;p&gt;In the weekly community calls, we brainstormed over an appropriate method that would fit in poliastro. Thanks to SciPy’s events support through &lt;code&gt;solve_ivp&lt;/code&gt;, we just had to come up with a time-varying and continuous “shadow” function without having to solve analytical equations manually. However, the critical challenge for us was to come up with such an equation! After a few trials of geometric manipulations and Jorge and Juanlu’s assistance, we came across an equation involving classical orbital elements that could serve our purpose. We were still questioning the performance and complexity of the method since …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yash</dc:creator><pubDate>Mon, 19 Jul 2021 12:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.poliastro.space,2021-07-19:/blog/2021/07/19/adding-ale-event-detectors/</guid><category>GSOC</category><category>GSOC</category><category>GSOC21</category><category>poliastro</category></item><item><title>GSoC 2021, the journey begins!</title><link>https://www.poliastro.space/blog/2021/06/06/poliastro-gsoc-yash/</link><description>&lt;h1&gt;The initial days…&lt;/h1&gt;
&lt;p&gt;Hi there! I am Yash, and I will be spending this summer with poliastro as part of GSoC 2021 to add some event detection capabilities. It was around December when I first learned about poliastro, and it gradually got me fascinated by orbital mechanics.&lt;/p&gt;
&lt;p&gt;While preparing to make my first pull request, poliastro's comprehensive documentation and tutorials came to the rescue! It was much needed for a beginner like me who had just stepped into the field of Astrodynamics. This was a period when I thoroughly enjoyed interacting with the community and learning orbital mechanics while simultaneously learning the best practices in software development.&lt;/p&gt;
&lt;h1&gt;Building up ideas and our aspirations for this summer!&lt;/h1&gt;
&lt;p&gt;After deciding to submit a proposal for the event detection project, I started brainstorming and looking for several references keeping in mind their relevance …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Yash</dc:creator><pubDate>Sun, 06 Jun 2021 11:00:00 +0200</pubDate><guid isPermaLink="false">tag:www.poliastro.space,2021-06-06:/blog/2021/06/06/poliastro-gsoc-yash/</guid><category>GSOC</category><category>GSOC</category><category>GSOC21</category><category>poliastro</category></item></channel></rss>